// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: external/news.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// News 外部新闻数据
type News struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Code                string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	Url                 string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
	WebsiteId           uint64   `protobuf:"varint,4,opt,name=website_id,json=websiteId,proto3" json:"website_id"`
	WebsiteName         string   `protobuf:"bytes,5,opt,name=website_name,json=websiteName,proto3" json:"website_name"`
	ReleaseDate         string   `protobuf:"bytes,6,opt,name=release_date,json=releaseDate,proto3" json:"release_date"`
	ReleaseAt           string   `protobuf:"bytes,7,opt,name=release_at,json=releaseAt,proto3" json:"release_at"`
	GrabDate            string   `protobuf:"bytes,8,opt,name=grab_date,json=grabDate,proto3" json:"grab_date"`
	GrabAt              string   `protobuf:"bytes,9,opt,name=grab_at,json=grabAt,proto3" json:"grab_at"`
	Tags                string   `protobuf:"bytes,10,opt,name=tags,proto3" json:"tags"`
	Author              string   `protobuf:"bytes,11,opt,name=author,proto3" json:"author"`
	OriginTitle         string   `protobuf:"bytes,12,opt,name=origin_title,json=originTitle,proto3" json:"origin_title"`
	Title               string   `protobuf:"bytes,13,opt,name=title,proto3" json:"title"`
	OriginalDescription string   `protobuf:"bytes,14,opt,name=original_description,json=originalDescription,proto3" json:"original_description"`
	Description         string   `protobuf:"bytes,15,opt,name=description,proto3" json:"description"`
	Original            string   `protobuf:"bytes,16,opt,name=original,proto3" json:"original"`
	Content             string   `protobuf:"bytes,17,opt,name=content,proto3" json:"content"`
	Contents            []string `protobuf:"bytes,18,rep,name=contents,proto3" json:"contents"`
	Status              uint64   `protobuf:"varint,19,opt,name=status,proto3" json:"status"`
	Checked             bool     `protobuf:"varint,20,opt,name=checked,proto3" json:"checked"`
	Remark              string   `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark"`
	CreatedAt           string   `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt           string   `protobuf:"bytes,23,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *News) Reset() {
	*x = News{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *News) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*News) ProtoMessage() {}

func (x *News) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use News.ProtoReflect.Descriptor instead.
func (*News) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{0}
}

func (x *News) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *News) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *News) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *News) GetWebsiteId() uint64 {
	if x != nil {
		return x.WebsiteId
	}
	return 0
}

func (x *News) GetWebsiteName() string {
	if x != nil {
		return x.WebsiteName
	}
	return ""
}

func (x *News) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *News) GetReleaseAt() string {
	if x != nil {
		return x.ReleaseAt
	}
	return ""
}

func (x *News) GetGrabDate() string {
	if x != nil {
		return x.GrabDate
	}
	return ""
}

func (x *News) GetGrabAt() string {
	if x != nil {
		return x.GrabAt
	}
	return ""
}

func (x *News) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *News) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *News) GetOriginTitle() string {
	if x != nil {
		return x.OriginTitle
	}
	return ""
}

func (x *News) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *News) GetOriginalDescription() string {
	if x != nil {
		return x.OriginalDescription
	}
	return ""
}

func (x *News) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *News) GetOriginal() string {
	if x != nil {
		return x.Original
	}
	return ""
}

func (x *News) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *News) GetContents() []string {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *News) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *News) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

func (x *News) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *News) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *News) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// SearchNewsPaginationPost 搜索新闻分页 传参
type SearchNewsPaginationPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size      uint64 `protobuf:"varint,1,opt,name=Size,proto3" json:"Size"`
	Page      uint64 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page"`
	WebsiteId uint64 `protobuf:"varint,3,opt,name=website_id,json=websiteId,proto3" json:"website_id"`
	Keyword   string `protobuf:"bytes,4,opt,name=Keyword,proto3" json:"Keyword"`
	Status    uint64 `protobuf:"varint,5,opt,name=Status,proto3" json:"Status"`
	Start     string `protobuf:"bytes,6,opt,name=Start,proto3" json:"Start"`
	End       string `protobuf:"bytes,7,opt,name=End,proto3" json:"End"`
}

func (x *SearchNewsPaginationPost) Reset() {
	*x = SearchNewsPaginationPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchNewsPaginationPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNewsPaginationPost) ProtoMessage() {}

func (x *SearchNewsPaginationPost) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNewsPaginationPost.ProtoReflect.Descriptor instead.
func (*SearchNewsPaginationPost) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{1}
}

func (x *SearchNewsPaginationPost) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchNewsPaginationPost) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchNewsPaginationPost) GetWebsiteId() uint64 {
	if x != nil {
		return x.WebsiteId
	}
	return 0
}

func (x *SearchNewsPaginationPost) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchNewsPaginationPost) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchNewsPaginationPost) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *SearchNewsPaginationPost) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

// ManualGrabNewsPost 手动抓取新闻
type ManualGrabNewsListPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebsiteJobId uint64 `protobuf:"varint,1,opt,name=website_job_id,json=websiteJobId,proto3" json:"website_job_id"`
	Start        uint64 `protobuf:"varint,2,opt,name=start,proto3" json:"start"` // 开始页码
	End          uint64 `protobuf:"varint,3,opt,name=end,proto3" json:"end"`     // 结束页码
}

func (x *ManualGrabNewsListPost) Reset() {
	*x = ManualGrabNewsListPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualGrabNewsListPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualGrabNewsListPost) ProtoMessage() {}

func (x *ManualGrabNewsListPost) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualGrabNewsListPost.ProtoReflect.Descriptor instead.
func (*ManualGrabNewsListPost) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{2}
}

func (x *ManualGrabNewsListPost) GetWebsiteJobId() uint64 {
	if x != nil {
		return x.WebsiteJobId
	}
	return 0
}

func (x *ManualGrabNewsListPost) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ManualGrabNewsListPost) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

// GrabNewsPost 抓取新闻
type GrabNewsPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Url                 string `protobuf:"bytes,2,opt,name=url,proto3" json:"url"` // 新闻地址
	WebsiteId           uint64 `protobuf:"varint,3,opt,name=website_id,json=websiteId,proto3" json:"website_id"`
	ReleaseDate         string `protobuf:"bytes,4,opt,name=release_date,json=releaseDate,proto3" json:"release_date"`
	ReleaseAt           string `protobuf:"bytes,5,opt,name=release_at,json=releaseAt,proto3" json:"release_at"`
	GrabDate            string `protobuf:"bytes,6,opt,name=grab_date,json=grabDate,proto3" json:"grab_date"`
	GrabAt              string `protobuf:"bytes,7,opt,name=grab_at,json=grabAt,proto3" json:"grab_at"`
	Author              string `protobuf:"bytes,9,opt,name=author,proto3" json:"author"`
	OriginTitle         string `protobuf:"bytes,10,opt,name=origin_title,json=originTitle,proto3" json:"origin_title"`
	Title               string `protobuf:"bytes,11,opt,name=title,proto3" json:"title"`
	OriginalDescription string `protobuf:"bytes,12,opt,name=original_description,json=originalDescription,proto3" json:"original_description"`
	Description         string `protobuf:"bytes,13,opt,name=description,proto3" json:"description"`
	Original            string `protobuf:"bytes,14,opt,name=original,proto3" json:"original"`
	Content             string `protobuf:"bytes,15,opt,name=content,proto3" json:"content"`
}

func (x *GrabNewsPost) Reset() {
	*x = GrabNewsPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrabNewsPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrabNewsPost) ProtoMessage() {}

func (x *GrabNewsPost) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrabNewsPost.ProtoReflect.Descriptor instead.
func (*GrabNewsPost) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{3}
}

func (x *GrabNewsPost) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GrabNewsPost) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GrabNewsPost) GetWebsiteId() uint64 {
	if x != nil {
		return x.WebsiteId
	}
	return 0
}

func (x *GrabNewsPost) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *GrabNewsPost) GetReleaseAt() string {
	if x != nil {
		return x.ReleaseAt
	}
	return ""
}

func (x *GrabNewsPost) GetGrabDate() string {
	if x != nil {
		return x.GrabDate
	}
	return ""
}

func (x *GrabNewsPost) GetGrabAt() string {
	if x != nil {
		return x.GrabAt
	}
	return ""
}

func (x *GrabNewsPost) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *GrabNewsPost) GetOriginTitle() string {
	if x != nil {
		return x.OriginTitle
	}
	return ""
}

func (x *GrabNewsPost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GrabNewsPost) GetOriginalDescription() string {
	if x != nil {
		return x.OriginalDescription
	}
	return ""
}

func (x *GrabNewsPost) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GrabNewsPost) GetOriginal() string {
	if x != nil {
		return x.Original
	}
	return ""
}

func (x *GrabNewsPost) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// TranslateNewsPost 翻译新闻
type TranslateNewsPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language"`
}

func (x *TranslateNewsPost) Reset() {
	*x = TranslateNewsPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslateNewsPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateNewsPost) ProtoMessage() {}

func (x *TranslateNewsPost) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateNewsPost.ProtoReflect.Descriptor instead.
func (*TranslateNewsPost) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{4}
}

func (x *TranslateNewsPost) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TranslateNewsPost) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

// TranslateNewsContentPost 翻译新闻内容
type TranslateNewsContentPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language"`
}

func (x *TranslateNewsContentPost) Reset() {
	*x = TranslateNewsContentPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslateNewsContentPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateNewsContentPost) ProtoMessage() {}

func (x *TranslateNewsContentPost) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateNewsContentPost.ProtoReflect.Descriptor instead.
func (*TranslateNewsContentPost) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{5}
}

func (x *TranslateNewsContentPost) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TranslateNewsContentPost) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

// UpdateNewsPost 更新新闻内容
type UpdateNewsPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ReleaseDate string   `protobuf:"bytes,2,opt,name=release_date,json=releaseDate,proto3" json:"release_date"`
	ReleaseAt   string   `protobuf:"bytes,3,opt,name=release_at,json=releaseAt,proto3" json:"release_at"`
	Tags        []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags"`
	Author      string   `protobuf:"bytes,5,opt,name=author,proto3" json:"author"`
	Title       string   `protobuf:"bytes,6,opt,name=title,proto3" json:"title"`
	Description string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description"`
	Content     string   `protobuf:"bytes,8,opt,name=content,proto3" json:"content"`
	Remark      string   `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark"`
}

func (x *UpdateNewsPost) Reset() {
	*x = UpdateNewsPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNewsPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewsPost) ProtoMessage() {}

func (x *UpdateNewsPost) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewsPost.ProtoReflect.Descriptor instead.
func (*UpdateNewsPost) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateNewsPost) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateNewsPost) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *UpdateNewsPost) GetReleaseAt() string {
	if x != nil {
		return x.ReleaseAt
	}
	return ""
}

func (x *UpdateNewsPost) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateNewsPost) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *UpdateNewsPost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateNewsPost) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateNewsPost) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateNewsPost) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// RemoveNewsPost 移除新闻
type RemoveNewsPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	WebsiteId uint64 `protobuf:"varint,2,opt,name=website_id,json=websiteId,proto3" json:"website_id"`
}

func (x *RemoveNewsPost) Reset() {
	*x = RemoveNewsPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNewsPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNewsPost) ProtoMessage() {}

func (x *RemoveNewsPost) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNewsPost.ProtoReflect.Descriptor instead.
func (*RemoveNewsPost) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveNewsPost) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RemoveNewsPost) GetWebsiteId() uint64 {
	if x != nil {
		return x.WebsiteId
	}
	return 0
}

// NewsResponse 返回 单条新闻
type NewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Data    *News  `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *NewsResponse) Reset() {
	*x = NewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsResponse) ProtoMessage() {}

func (x *NewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsResponse.ProtoReflect.Descriptor instead.
func (*NewsResponse) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{8}
}

func (x *NewsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NewsResponse) GetData() *News {
	if x != nil {
		return x.Data
	}
	return nil
}

// NewsListResponse 返回 新闻列表
type NewsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string  `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Data    []*News `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *NewsListResponse) Reset() {
	*x = NewsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsListResponse) ProtoMessage() {}

func (x *NewsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsListResponse.ProtoReflect.Descriptor instead.
func (*NewsListResponse) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{9}
}

func (x *NewsListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NewsListResponse) GetData() []*News {
	if x != nil {
		return x.Data
	}
	return nil
}

// NewsPaginationResponse 返回 新闻分页
type NewsPaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string                           `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Data    *NewsPaginationResponse_NewsList `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *NewsPaginationResponse) Reset() {
	*x = NewsPaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsPaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsPaginationResponse) ProtoMessage() {}

func (x *NewsPaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsPaginationResponse.ProtoReflect.Descriptor instead.
func (*NewsPaginationResponse) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{10}
}

func (x *NewsPaginationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NewsPaginationResponse) GetData() *NewsPaginationResponse_NewsList {
	if x != nil {
		return x.Data
	}
	return nil
}

type NewsPaginationResponse_NewsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*News `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	Total int64   `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *NewsPaginationResponse_NewsList) Reset() {
	*x = NewsPaginationResponse_NewsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_news_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsPaginationResponse_NewsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsPaginationResponse_NewsList) ProtoMessage() {}

func (x *NewsPaginationResponse_NewsList) ProtoReflect() protoreflect.Message {
	mi := &file_external_news_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsPaginationResponse_NewsList.ProtoReflect.Descriptor instead.
func (*NewsPaginationResponse_NewsList) Descriptor() ([]byte, []int) {
	return file_external_news_proto_rawDescGZIP(), []int{10, 0}
}

func (x *NewsPaginationResponse_NewsList) GetList() []*News {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *NewsPaginationResponse_NewsList) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_external_news_proto protoreflect.FileDescriptor

var file_external_news_proto_rawDesc = []byte{
	0x0a, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x22,
	0x8a, 0x05, 0x0a, 0x04, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x62, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x62, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x72, 0x61, 0x62, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a,
	0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbb, 0x01, 0x0a,
	0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x22, 0x66, 0x0a, 0x16, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x62, 0x4e, 0x65, 0x77, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x22, 0xa7, 0x03, 0x0a, 0x0c, 0x47, 0x72, 0x61, 0x62, 0x4e, 0x65, 0x77, 0x73, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72,
	0x61, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x72, 0x61, 0x62, 0x44, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x62, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x61, 0x62, 0x41, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x31, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x11,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a,
	0x18, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x77, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x3f, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x50, 0x6f,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x49,
	0x64, 0x22, 0x4c, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x50, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xb7, 0x01, 0x0a, 0x16, 0x4e, 0x65, 0x77, 0x73, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x4e, 0x65, 0x77, 0x73, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x44, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_external_news_proto_rawDescOnce sync.Once
	file_external_news_proto_rawDescData = file_external_news_proto_rawDesc
)

func file_external_news_proto_rawDescGZIP() []byte {
	file_external_news_proto_rawDescOnce.Do(func() {
		file_external_news_proto_rawDescData = protoimpl.X.CompressGZIP(file_external_news_proto_rawDescData)
	})
	return file_external_news_proto_rawDescData
}

var file_external_news_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_external_news_proto_goTypes = []interface{}{
	(*News)(nil),                            // 0: external.News
	(*SearchNewsPaginationPost)(nil),        // 1: external.SearchNewsPaginationPost
	(*ManualGrabNewsListPost)(nil),          // 2: external.ManualGrabNewsListPost
	(*GrabNewsPost)(nil),                    // 3: external.GrabNewsPost
	(*TranslateNewsPost)(nil),               // 4: external.TranslateNewsPost
	(*TranslateNewsContentPost)(nil),        // 5: external.TranslateNewsContentPost
	(*UpdateNewsPost)(nil),                  // 6: external.UpdateNewsPost
	(*RemoveNewsPost)(nil),                  // 7: external.RemoveNewsPost
	(*NewsResponse)(nil),                    // 8: external.NewsResponse
	(*NewsListResponse)(nil),                // 9: external.NewsListResponse
	(*NewsPaginationResponse)(nil),          // 10: external.NewsPaginationResponse
	(*NewsPaginationResponse_NewsList)(nil), // 11: external.NewsPaginationResponse.NewsList
}
var file_external_news_proto_depIdxs = []int32{
	0,  // 0: external.NewsResponse.data:type_name -> external.News
	0,  // 1: external.NewsListResponse.data:type_name -> external.News
	11, // 2: external.NewsPaginationResponse.data:type_name -> external.NewsPaginationResponse.NewsList
	0,  // 3: external.NewsPaginationResponse.NewsList.list:type_name -> external.News
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_external_news_proto_init() }
func file_external_news_proto_init() {
	if File_external_news_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_external_news_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*News); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_news_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchNewsPaginationPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_news_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualGrabNewsListPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_news_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrabNewsPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_news_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranslateNewsPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_news_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranslateNewsContentPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_news_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNewsPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_news_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNewsPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_news_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_news_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_news_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsPaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_news_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsPaginationResponse_NewsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_external_news_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_external_news_proto_goTypes,
		DependencyIndexes: file_external_news_proto_depIdxs,
		MessageInfos:      file_external_news_proto_msgTypes,
	}.Build()
	File_external_news_proto = out.File
	file_external_news_proto_rawDesc = nil
	file_external_news_proto_goTypes = nil
	file_external_news_proto_depIdxs = nil
}
