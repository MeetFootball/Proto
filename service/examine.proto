syntax = "proto3";

package service;

option go_package = "./service;service";

import "go/go.proto";

/**************** 数据结构 ****************/

// ExamineText 文字审核结果
message ExamineText {
  bool     result       = 1 [(gogoproto.jsontag) = "result"];
  repeated string words = 2 [(gogoproto.jsontag) = "words"];
}

// ExamineImage 图片审核结果
message ExamineImage {
  bool   result = 1 [(gogoproto.jsontag) = "result"];
  string error  = 2 [(gogoproto.jsontag) = "error"];
}

/**************** 请求结构 ****************/

// ExamineTextPost 文字审核
message ExamineTextPost {
  uint64 UUID   = 1 [(gogoproto.jsontag) = "uuid"];
  uint64 Client = 2 [(gogoproto.jsontag) = "client"];
  string Text   = 3 [(gogoproto.jsontag) = "text"];
}

// ExamineImagePost 图片审核
message ExamineImagePost {
  uint64 UUID   = 1 [(gogoproto.jsontag) = "uuid"];
  uint64 Client = 2 [(gogoproto.jsontag) = "client"];
  uint64 Type   = 3 [(gogoproto.jsontag) = "type"];
  string Image  = 4 [(gogoproto.jsontag) = "image"];
}

/**************** 返回结构 ****************/

// ExamineTextResponse 返回 文字审核结果
message ExamineTextResponse {
  string      Message = 1 [(gogoproto.jsontag) = "message"];
  ExamineText Data    = 2 [(gogoproto.jsontag) = "data"];
}

// ExamineImageResponse 返回 审核结果
message ExamineImageResponse {
  string       Message = 1 [(gogoproto.jsontag) = "message"];
  ExamineImage Data    = 2 [(gogoproto.jsontag) = "data"];
}